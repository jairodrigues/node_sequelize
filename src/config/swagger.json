{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Documentação API USers",
    "description":
      "Documentação dos endpoints criados como bootstrap para projetos com node.js, sequelize, jwt, BDD",
    "license": {
      "name": "Jairo Rodrigues Gonçalves Junior",
      "url": "https://github.com/jairodrigues"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Signup",
      "description": "Gerar token válido"
    },
    {
      "name": "Users",
      "description": "gestão de usuários"
    }
  ],
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/auth": {
      "post": {
        "tags": ["Signup"],
        "summary": "Signup in system",
        "description": "Signup in system",
        "parameters": [
          {
            "name": "auth",
            "in": "body",
            "description": "User that we want to signup",
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "users authentication",
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users in system",
        "produces": ["application/json"],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create new user",
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Users"],
        "summary": "Get user with given ID",
        "produces": ["application/json"],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User is found"
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": ["Users"],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User is deleted"
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": ["Users"],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "Auth": {
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "Users": {
      "required": ["name", "email", "password", "isActive"],
      "properties": {
        "name": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
       "password": {
          "type": "string",
          "uniqueItems": true
        }
      }
    }
  }
}
